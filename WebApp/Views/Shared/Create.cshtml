@using WebApp.Dtos
@model Object

@{
    ViewData["Title"] = "Add new";
}

<div class="card border-dark mb-3 mt-3 col-md-8 offset-2 w-30">
    <div class="card-header bg-success text-light">
        <h3 class="card-title">Add new</h3>
    </div>
    <form id="Create_@ViewContext.RouteData.Values["Controller"]!.ToString()" asp-action="Create" enctype="multipart/form-data">
        <div class="card-body">
            @await Html.PartialAsync("_ADD", Model, ViewBag.Dropdowns)
        </div>
        <div class="card-footer form-group mt-4">
            @if (userManager.GetAccount(HttpContextAccessor.HttpContext!.Session.GetString("Id")) != null)
            {
                <button form="Create_@ViewContext.RouteData.Values["Controller"]!.ToString()" type="submit" class="btn btn-sm btn-success"><i class="bi bi-plus-circle"></i> Create</button>
            }
            @if (ViewBag.Session != null && ViewBag.Session == "false")
            {
                <a asp-action="List" class="btn btn-sm btn-secondary float-end"><i class="bi bi-x"></i> Back to list</a>
            }
            else
            {
                <a asp-action="Index" class="btn btn-sm btn-secondary float-end"><i class="bi bi-list"></i> Back to browser</a>
            }
        </div>
    </form>
</div>
@await Html.PartialAsync("_ModalAddType", new AnimalTypeDto())
@await Html.PartialAsync("_ModalAddSpecie", new AnimalSpecieDto())
@await Html.PartialAsync("_ModalAddFacility", new FacilityDto())
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        function preview() {
            ProfileImgPreview.src = URL.createObjectURL(event.target.files[0]);
        }
    </script>
}
